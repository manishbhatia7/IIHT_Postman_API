{
	"info": {
		"_postman_id": "2653ef6e-84ed-4044-833f-04d9c996f7e4",
		"name": "Assignment 4",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "pets",
			"item": [
				{
					"name": "List all pets",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pets?limit=<integer>&petid=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pets"
							],
							"query": [
								{
									"key": "limit",
									"value": "<integer>",
									"description": "How many items to return at one time (max 100)"
								},
								{
									"key": "petid",
									"value": "<string>",
									"description": "The id of the pet to retrieve"
								}
							]
						}
					},
					"response": [
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets?limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									],
									"query": [
										{
											"key": "limit",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -38631436,\n \"message\": \"ea e\"\n}"
						},
						{
							"name": "A paged array of pets",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets?limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									],
									"query": [
										{
											"key": "limit",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "x-next",
									"value": "dolor enim ut laborum",
									"description": "A link to the next page of responses"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 11954414,\n  \"name\": \"irure\",\n  \"tag\": \"labore anim\"\n },\n {\n  \"id\": 31367498,\n  \"name\": \"sint Ut\",\n  \"tag\": \"cillum nisi nulla\"\n }\n]"
						}
					]
				},
				{
					"name": "Create a pet",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pets"
							]
						}
					},
					"response": [
						{
							"name": "Null response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -38631436,\n \"message\": \"ea e\"\n}"
						}
					]
				},
				{
					"name": "Info for a specific pet",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pets/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pets",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "<string>",
									"description": "(Required) The id of the pet to retrieve"
								}
							]
						}
					},
					"response": [
						{
							"name": "Expected response to a valid request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": -60622258,\n  \"name\": \"in offi\",\n  \"tag\": \"aliquip\"\n },\n {\n  \"id\": -29244484,\n  \"name\": \"dolor eu minim incididunt\",\n  \"tag\": \"nisi \"\n }\n]"
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": -38631436,\n \"message\": \"ea e\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Validating api schema",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8a8041b6-a0d8-456f-a1e8-94a3fad0c4a6",
						"exec": [
							"const sw_schema=\r",
							"{\r",
							"    \"description\": \"A person within the Star Wars universe\",\r",
							"    \"title\": \"People\",\r",
							"    \"required\": [\r",
							"        \"name\",\r",
							"        \"height\",\r",
							"        \"mass\",\r",
							"        \"hair_color\",\r",
							"        \"skin_color\",\r",
							"        \"eye_color\",\r",
							"        \"birth_year\",\r",
							"        \"gender\",\r",
							"        \"homeworld\",\r",
							"        \"films\",\r",
							"        \"species\",\r",
							"        \"vehicles\",\r",
							"        \"starships\",\r",
							"        \"url\",\r",
							"        \"created\",\r",
							"        \"edited\"\r",
							"    ],\r",
							"    \"$schema\": \"http://json-schema.org/draft-04/schema\",\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"starships\": {\r",
							"            \"type\": \"array\",\r",
							"            \"description\": \"An array of starship resources that this person has piloted\"\r",
							"        },\r",
							"        \"edited\": {\r",
							"            \"type\": \"string\",\r",
							"            \"description\": \"the ISO 8601 date format of the time that this resource was edited.\",\r",
							"            \"format\": \"date-time\"\r",
							"        },\r",
							"        \"name\": {\r",
							"            \"type\": \"string\",\r",
							"            \"description\": \"The name of this person.\"\r",
							"        },\r",
							"        \"created\": {\r",
							"            \"type\": \"string\",\r",
							"            \"description\": \"The ISO 8601 date format of the time that this resource was created.\",\r",
							"            \"format\": \"date-time\"\r",
							"        },\r",
							"        \"url\": {\r",
							"            \"type\": \"string\",\r",
							"            \"description\": \"The url of this resource\",\r",
							"            \"format\": \"uri\"\r",
							"        },\r",
							"        \"gender\": {\r",
							"            \"type\": \"string\",\r",
							"            \"description\": \"The gender of this person (if known).\"\r",
							"        },\r",
							"        \"vehicles\": {\r",
							"            \"type\": \"array\",\r",
							"            \"description\": \"An array of vehicle resources that this person has piloted\"\r",
							"        },\r",
							"        \"skin_color\": {\r",
							"            \"type\": \"string\",\r",
							"            \"description\": \"The skin color of this person.\"\r",
							"        },\r",
							"        \"hair_color\": {\r",
							"            \"type\": \"string\",\r",
							"            \"description\": \"The hair color of this person.\"\r",
							"        },\r",
							"        \"height\": {\r",
							"            \"type\": \"string\",\r",
							"            \"description\": \"The height of this person in meters.\"\r",
							"        },\r",
							"        \"eye_color\": {\r",
							"            \"type\": \"string\",\r",
							"            \"description\": \"The eye color of this person.\"\r",
							"        },\r",
							"        \"mass\": {\r",
							"            \"type\": \"string\",\r",
							"            \"description\": \"The mass of this person in kilograms.\"\r",
							"        },\r",
							"        \"films\": {\r",
							"            \"type\": \"array\",\r",
							"            \"description\": \"An array of urls of film resources that this person has been in.\"\r",
							"        },\r",
							"        \"species\": {\r",
							"            \"type\": \"array\",\r",
							"            \"description\": \"The url of the species resource that this person is.\"\r",
							"        },\r",
							"        \"homeworld\": {\r",
							"            \"type\": \"string\",\r",
							"            \"description\": \"The url of the planet resource that this person was born on.\"\r",
							"        },\r",
							"        \"birth_year\": {\r",
							"            \"type\": \"string\",\r",
							"            \"description\": \"The birth year of this person. BBY (Before the Battle of Yavin) or ABY (After the Battle of Yavin).\"\r",
							"        }\r",
							"    }\r",
							"}\r",
							"pm.expect(\"schema validation\",function()\r",
							"{\r",
							"    const validationResult=tv4.validateResult(pm.response.json(),sw_schema,false,true)\r",
							"    pm.expect(validationResult.valid).to.be.true;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "https://swapi.dev/api/people/1/",
					"protocol": "https",
					"host": [
						"swapi",
						"dev"
					],
					"path": [
						"api",
						"people",
						"1",
						""
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "f154a0d7-7859-4e21-ad6b-bb6a85eff739",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "a0339301-6a5e-4695-a0c3-6dec35adddbf",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "66a38f54-d7f3-45c5-a369-03b308ac99a3",
			"key": "baseUrl",
			"value": "http://petstore.swagger.io/v1"
		}
	],
	"protocolProfileBehavior": {}
}